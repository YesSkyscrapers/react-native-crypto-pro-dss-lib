[UTF-8]
[Use `iconv -f utf-8', if needed]

  В данный момент поддерживается три считывателя смарт-карт: Feitian, Aladdin и Activ.
  Можно собрать приложения так, чтобы оно работало с любым из них или без поддержки 
  считывателя смарт-карт.
  Для обновления списка считывателей в процессе работы приложения добавьте в config.ini
  в секцию [Parameters] строку dynamic_readers = 1
  
1.  Для сборки приложения без поддержки считывателя смарт-карт добавьте в линковку 
    библиотеку readers/librdrpcsc_empty.o. Это делается аналогично п.3 инструкции 
    по сборке примера.
    
2.  Считыватель Feitian iR301-U поддерживает работу со смарт-картами Магистра, ОСКАР, РИК.
    Для сборки приложения с поддержкой этого считывателя добавьте в линковку библиотеку
    readers/Feitian/libiRockey301_ccid.a. Это делается аналогично п.3 инструкции 
    по сборке примера.
    Добавьте в Info.plist вашего приложения:
    
        <key>UISupportedExternalAccessoryProtocols</key>
        <array>
          <string>com.ftsafe.CRD</string>
          <string>com.ftsafe.iR301</string>
        </array>
    
3.  Считыватель Aladdin поддерживает работу со смарт-картами Магистра, ОСКАР, РИК, 
    eToken ГОСТ и JaCarta ГОСТ. Для сборки приложения с поддержкой этого считывателя
    добавьте в линковку библиотеки из директории readers/Aladdin. Это делается
    аналогично п.3 инструкции по сборке примера. Добавьте в параметры цели сборки
    в "Other linker flags" флаг "-all_load".
    Добавьте в Info.plist вашего приложения:
    
        <key>UISupportedExternalAccessoryProtocols</key>
        <array>
          <string>com.ftsafe.CRD</string>
          <string>com.ftsafe.iR301</string>
        </array>

4.  Для сборки приложения с поддержкой bluetooth-токена Рутокен ЭЦП Bluetooth
    от компании Актив добавьте в линковку фреймворки
    RtPKCS11ECP.framework, RtPcsc.framework, RDRRtSupCp.framework
    из Рутокен SDK (http://www.rutoken.ru/developers/sdk/), а также системные фреймворки
    Security.framework и ExternalAccessory.framework.
    Это делается аналогично п.3 инструкции по сборке примера.

    Укажите путь к фреймворкам из SDK Рутокен в XCode (Targets\Build Settings\Framework Search Path).

    Добавьте в параметры цели сборки в "Other linker flags" флаг "-all_load".
    Добавьте в линковку согласно п.3 инструкции библиотеку libstdc++.6.0.9.tbd
    (актуально до тех пор, пока Rutoken SDK собирается с libstdc++, а не libc++).
    
    Добавьте в параметры цели сборки флаг «-force_load» (Targets\Build Settings\Other Linker Flags):
    -force_load /путь/к фреймворкам/рутокен_sdk/rtpkcs11ecp.framework/rtpkcs11ecp
    -force_load /путь/к фреймворкам/рутокен_sdk/RDRRtSupCp.framework/RDRRtSupCp
    -force_load /путь/к фреймворкам/рутокен_sdk/RtPcsc.framework/RtPcsc

    Добавьте в Info.plist вашего приложения:
 
        <key>UISupportedExternalAccessoryProtocols</key>
        <array>
          <string>com.aktivco.rutokenecp</string>
        </array>

